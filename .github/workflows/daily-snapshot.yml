name: Daily FTSO Snapshot (Flaremetrics)

on:
  schedule:
    - cron: '*/5 * * * *'    # Run every 5 minutes to catch scheduled times
  workflow_dispatch:         # Allow manual trigger

jobs:
  run-snapshot:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Check if snapshot is scheduled now
        id: check_schedule
        run: |
          python - <<'EOF'
          import json, datetime
          from datetime import timezone
          # Load the epoch schedule file
          try:
              with open("flare_epoch_schedule.json", "r") as f:
                  schedule = json.load(f)
          except Exception as e:
              print("Error reading schedule:", e)
              exit(0)  # Gracefully exit if schedule file is missing or invalid

          # Get current UTC time rounded to the minute
          now_utc = datetime.datetime.now(timezone.utc).replace(second=0, microsecond=0)
          now_str = now_utc.strftime("%Y-%m-%d %H:%M:%S")
          print("Current UTC time:", now_str)

          # Check if current time matches any scheduled start or end time
          scheduled = any(
              epoch.get("Start (UTC)") == now_str or epoch.get("End (UTC)") == now_str
              for epoch in schedule
          )
          if scheduled:
              print("Scheduled snapshot time matched.")
              with open("$GITHUB_OUTPUT", "a") as f:
                  f.write("run_snapshot=true\n")
          else:
              print("No scheduled snapshot time matched.")
              with open("$GITHUB_OUTPUT", "a") as f:
                  f.write("run_snapshot=false\n")
          EOF

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y chromium-browser chromium-chromedriver
          pip install selenium beautifulsoup4 bs4

      - name: Run snapshot script
        if: steps.check_schedule.outputs.run_snapshot == 'true'
        run: python snapshot.py

      - name: Commit and push results
        if: steps.check_schedule.outputs.run_snapshot == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@users.noreply.github.com'
          git add daily_snapshots/
          git commit -m "Daily Flaremetrics snapshot $(date +'%Y-%m-%d')" || echo "No changes to commit"
          git push
